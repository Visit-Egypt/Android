// Generated by Dagger (https://dagger.dev).
package com.visitegypt.presentation.home;

import com.visitegypt.domain.usecase.GetPlacesUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeViewModel_Factory implements Factory<HomeViewModel> {
  private final Provider<GetPlacesUseCase> getPlacesUseCaseProvider;

  public HomeViewModel_Factory(Provider<GetPlacesUseCase> getPlacesUseCaseProvider) {
    this.getPlacesUseCaseProvider = getPlacesUseCaseProvider;
  }

  @Override
  public HomeViewModel get() {
    return newInstance(getPlacesUseCaseProvider.get());
  }

  public static HomeViewModel_Factory create(Provider<GetPlacesUseCase> getPlacesUseCaseProvider) {
    return new HomeViewModel_Factory(getPlacesUseCaseProvider);
  }

  public static HomeViewModel newInstance(GetPlacesUseCase getPlacesUseCase) {
    return new HomeViewModel(getPlacesUseCase);
  }
}
