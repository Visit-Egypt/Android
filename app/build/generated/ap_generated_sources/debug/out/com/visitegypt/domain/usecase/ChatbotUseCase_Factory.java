// Generated by Dagger (https://dagger.dev).
package com.visitegypt.domain.usecase;

import com.visitegypt.domain.repository.ChatbotRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ChatbotUseCase_Factory implements Factory<ChatbotUseCase> {
  private final Provider<ChatbotRepository> chatbotRepositoryProvider;

  public ChatbotUseCase_Factory(Provider<ChatbotRepository> chatbotRepositoryProvider) {
    this.chatbotRepositoryProvider = chatbotRepositoryProvider;
  }

  @Override
  public ChatbotUseCase get() {
    return newInstance(chatbotRepositoryProvider.get());
  }

  public static ChatbotUseCase_Factory create(
      Provider<ChatbotRepository> chatbotRepositoryProvider) {
    return new ChatbotUseCase_Factory(chatbotRepositoryProvider);
  }

  public static ChatbotUseCase newInstance(ChatbotRepository chatbotRepository) {
    return new ChatbotUseCase(chatbotRepository);
  }
}
