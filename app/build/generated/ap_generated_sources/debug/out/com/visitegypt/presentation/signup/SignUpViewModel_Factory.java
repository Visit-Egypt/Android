// Generated by Dagger (https://dagger.dev).
package com.visitegypt.presentation.signup;

import android.content.SharedPreferences;
import com.visitegypt.domain.usecase.RegisterUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SignUpViewModel_Factory implements Factory<SignUpViewModel> {
  private final Provider<RegisterUseCase> registerUseCaseProvider;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public SignUpViewModel_Factory(Provider<RegisterUseCase> registerUseCaseProvider,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    this.registerUseCaseProvider = registerUseCaseProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public SignUpViewModel get() {
    return newInstance(registerUseCaseProvider.get(), sharedPreferencesProvider.get());
  }

  public static SignUpViewModel_Factory create(Provider<RegisterUseCase> registerUseCaseProvider,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    return new SignUpViewModel_Factory(registerUseCaseProvider, sharedPreferencesProvider);
  }

  public static SignUpViewModel newInstance(RegisterUseCase registerUseCase,
      SharedPreferences sharedPreferences) {
    return new SignUpViewModel(registerUseCase, sharedPreferences);
  }
}
