// Generated by Dagger (https://dagger.dev).
package com.visitegypt.domain.usecase;

import com.visitegypt.domain.repository.PostsRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UpdatePostUseCase_Factory implements Factory<UpdatePostUseCase> {
  private final Provider<PostsRepository> postsRepositoryProvider;

  public UpdatePostUseCase_Factory(Provider<PostsRepository> postsRepositoryProvider) {
    this.postsRepositoryProvider = postsRepositoryProvider;
  }

  @Override
  public UpdatePostUseCase get() {
    return newInstance(postsRepositoryProvider.get());
  }

  public static UpdatePostUseCase_Factory create(
      Provider<PostsRepository> postsRepositoryProvider) {
    return new UpdatePostUseCase_Factory(postsRepositoryProvider);
  }

  public static UpdatePostUseCase newInstance(PostsRepository postsRepository) {
    return new UpdatePostUseCase(postsRepository);
  }
}
