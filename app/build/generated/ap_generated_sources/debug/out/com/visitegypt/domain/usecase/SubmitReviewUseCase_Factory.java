// Generated by Dagger (https://dagger.dev).
package com.visitegypt.domain.usecase;

import com.visitegypt.domain.repository.PlaceRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SubmitReviewUseCase_Factory implements Factory<SubmitReviewUseCase> {
  private final Provider<PlaceRepository> placeRepositoryProvider;

  public SubmitReviewUseCase_Factory(Provider<PlaceRepository> placeRepositoryProvider) {
    this.placeRepositoryProvider = placeRepositoryProvider;
  }

  @Override
  public SubmitReviewUseCase get() {
    return newInstance(placeRepositoryProvider.get());
  }

  public static SubmitReviewUseCase_Factory create(
      Provider<PlaceRepository> placeRepositoryProvider) {
    return new SubmitReviewUseCase_Factory(placeRepositoryProvider);
  }

  public static SubmitReviewUseCase newInstance(PlaceRepository placeRepository) {
    return new SubmitReviewUseCase(placeRepository);
  }
}
