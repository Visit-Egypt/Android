// Generated by Dagger (https://dagger.dev).
package com.visitegypt.domain.usecase;

import android.content.SharedPreferences;
import com.visitegypt.domain.repository.PostsRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetPostsByUser_Factory implements Factory<GetPostsByUser> {
  private final Provider<PostsRepository> postsRepositoryProvider;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public GetPostsByUser_Factory(Provider<PostsRepository> postsRepositoryProvider,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    this.postsRepositoryProvider = postsRepositoryProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public GetPostsByUser get() {
    return newInstance(postsRepositoryProvider.get(), sharedPreferencesProvider.get());
  }

  public static GetPostsByUser_Factory create(Provider<PostsRepository> postsRepositoryProvider,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    return new GetPostsByUser_Factory(postsRepositoryProvider, sharedPreferencesProvider);
  }

  public static GetPostsByUser newInstance(PostsRepository postsRepository,
      SharedPreferences sharedPreferences) {
    return new GetPostsByUser(postsRepository, sharedPreferences);
  }
}
