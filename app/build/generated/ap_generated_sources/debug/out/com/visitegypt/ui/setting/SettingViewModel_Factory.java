// Generated by Dagger (https://dagger.dev).
package com.visitegypt.ui.setting;

import android.content.SharedPreferences;
import com.visitegypt.domain.usecase.GetUserUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SettingViewModel_Factory implements Factory<SettingViewModel> {
  private final Provider<GetUserUseCase> getUserUseCaseProvider;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public SettingViewModel_Factory(Provider<GetUserUseCase> getUserUseCaseProvider,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    this.getUserUseCaseProvider = getUserUseCaseProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public SettingViewModel get() {
    return newInstance(getUserUseCaseProvider.get(), sharedPreferencesProvider.get());
  }

  public static SettingViewModel_Factory create(Provider<GetUserUseCase> getUserUseCaseProvider,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    return new SettingViewModel_Factory(getUserUseCaseProvider, sharedPreferencesProvider);
  }

  public static SettingViewModel newInstance(GetUserUseCase getUserUseCase,
      SharedPreferences sharedPreferences) {
    return new SettingViewModel(getUserUseCase, sharedPreferences);
  }
}
