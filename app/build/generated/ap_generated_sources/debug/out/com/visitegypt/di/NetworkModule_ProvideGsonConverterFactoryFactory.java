// Generated by Dagger (https://dagger.dev).
package com.visitegypt.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import retrofit2.converter.gson.GsonConverterFactory;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideGsonConverterFactoryFactory implements Factory<GsonConverterFactory> {
  private final NetworkModule module;

  public NetworkModule_ProvideGsonConverterFactoryFactory(NetworkModule module) {
    this.module = module;
  }

  @Override
  public GsonConverterFactory get() {
    return provideGsonConverterFactory(module);
  }

  public static NetworkModule_ProvideGsonConverterFactoryFactory create(NetworkModule module) {
    return new NetworkModule_ProvideGsonConverterFactoryFactory(module);
  }

  public static GsonConverterFactory provideGsonConverterFactory(NetworkModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideGsonConverterFactory());
  }
}
