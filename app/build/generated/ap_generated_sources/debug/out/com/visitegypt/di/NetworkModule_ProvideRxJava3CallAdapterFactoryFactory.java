// Generated by Dagger (https://dagger.dev).
package com.visitegypt.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import retrofit2.adapter.rxjava3.RxJava3CallAdapterFactory;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideRxJava3CallAdapterFactoryFactory implements Factory<RxJava3CallAdapterFactory> {
  private final NetworkModule module;

  public NetworkModule_ProvideRxJava3CallAdapterFactoryFactory(NetworkModule module) {
    this.module = module;
  }

  @Override
  public RxJava3CallAdapterFactory get() {
    return provideRxJava3CallAdapterFactory(module);
  }

  public static NetworkModule_ProvideRxJava3CallAdapterFactoryFactory create(NetworkModule module) {
    return new NetworkModule_ProvideRxJava3CallAdapterFactoryFactory(module);
  }

  public static RxJava3CallAdapterFactory provideRxJava3CallAdapterFactory(NetworkModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideRxJava3CallAdapterFactory());
  }
}
