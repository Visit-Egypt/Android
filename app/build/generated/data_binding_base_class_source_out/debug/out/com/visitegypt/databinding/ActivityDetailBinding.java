// Generated by view binder compiler. Do not edit!
package com.visitegypt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.shimmer.ShimmerFrameLayout;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textview.MaterialTextView;
import com.smarteist.autoimageslider.SliderView;
import com.visitegypt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ShimmerFrameLayout artifactsShimmerFrameLayout;

  @NonNull
  public final ShimmerFrameLayout buttonShimmerFrameLayout;

  @NonNull
  public final FloatingActionButton chatbotFloatingActionButton;

  @NonNull
  public final MaterialTextView childrenPriceTextView;

  @NonNull
  public final ShimmerFrameLayout descriptionShimmerFrameLayout;

  @NonNull
  public final MaterialTextView descriptionTextView;

  @NonNull
  public final LinearLayout detailActivityLayout;

  @NonNull
  public final MaterialTextView egyptianAdultPriceTextView;

  @NonNull
  public final MaterialTextView egyptianPhotoPriceTextView;

  @NonNull
  public final MaterialTextView egyptianStudentTextView;

  @NonNull
  public final MaterialTextView egyptianVideoPriceTextView;

  @NonNull
  public final MaterialTextView foreignerAdultPriceTextView;

  @NonNull
  public final MaterialTextView foreignerPhotoPriceTextView;

  @NonNull
  public final MaterialTextView foreignerStudentPriceTextView;

  @NonNull
  public final MaterialTextView foreignerVideoPriceTextView;

  @NonNull
  public final MaterialTextView fridayOpeningHoursTextView;

  @NonNull
  public final ShimmerFrameLayout hoursShimmerFrameLayout;

  @NonNull
  public final RecyclerView itemsRecyclerView;

  @NonNull
  public final LinearLayout locationLayout;

  @NonNull
  public final ShimmerFrameLayout locationShimmerFrameLayout;

  @NonNull
  public final MaterialTextView locationTextView;

  @NonNull
  public final MaterialTextView mondayOpeningHoursTextView;

  @NonNull
  public final MaterialTextView noReviewsTextView;

  @NonNull
  public final MaterialTextView placeTitleTextView;

  @NonNull
  public final ShimmerFrameLayout pricesShimmerFrameLayout;

  @NonNull
  public final RecyclerView reviewsRecyclerView;

  @NonNull
  public final ShimmerFrameLayout reviewsShimmerFrameLayout;

  @NonNull
  public final MaterialTextView saturdayOpeningHoursTextView;

  @NonNull
  public final ScrollView shimmerScrollView;

  @NonNull
  public final ShimmerFrameLayout sliderShimmerFrameLayout;

  @NonNull
  public final SliderView sliderSliderView;

  @NonNull
  public final MaterialTextView sundayOpeningHoursTextView;

  @NonNull
  public final MaterialTextView thursdayOpeningHoursTextView;

  @NonNull
  public final ShimmerFrameLayout titleShimmerFrameLayout;

  @NonNull
  public final MaterialTextView tuesdayOpeningHoursTextView;

  @NonNull
  public final MaterialTextView wednesdayOpeningHoursTextView;

  @NonNull
  public final MaterialButton writeReviewButton;

  private ActivityDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull ShimmerFrameLayout artifactsShimmerFrameLayout,
      @NonNull ShimmerFrameLayout buttonShimmerFrameLayout,
      @NonNull FloatingActionButton chatbotFloatingActionButton,
      @NonNull MaterialTextView childrenPriceTextView,
      @NonNull ShimmerFrameLayout descriptionShimmerFrameLayout,
      @NonNull MaterialTextView descriptionTextView, @NonNull LinearLayout detailActivityLayout,
      @NonNull MaterialTextView egyptianAdultPriceTextView,
      @NonNull MaterialTextView egyptianPhotoPriceTextView,
      @NonNull MaterialTextView egyptianStudentTextView,
      @NonNull MaterialTextView egyptianVideoPriceTextView,
      @NonNull MaterialTextView foreignerAdultPriceTextView,
      @NonNull MaterialTextView foreignerPhotoPriceTextView,
      @NonNull MaterialTextView foreignerStudentPriceTextView,
      @NonNull MaterialTextView foreignerVideoPriceTextView,
      @NonNull MaterialTextView fridayOpeningHoursTextView,
      @NonNull ShimmerFrameLayout hoursShimmerFrameLayout, @NonNull RecyclerView itemsRecyclerView,
      @NonNull LinearLayout locationLayout, @NonNull ShimmerFrameLayout locationShimmerFrameLayout,
      @NonNull MaterialTextView locationTextView,
      @NonNull MaterialTextView mondayOpeningHoursTextView,
      @NonNull MaterialTextView noReviewsTextView, @NonNull MaterialTextView placeTitleTextView,
      @NonNull ShimmerFrameLayout pricesShimmerFrameLayout,
      @NonNull RecyclerView reviewsRecyclerView,
      @NonNull ShimmerFrameLayout reviewsShimmerFrameLayout,
      @NonNull MaterialTextView saturdayOpeningHoursTextView, @NonNull ScrollView shimmerScrollView,
      @NonNull ShimmerFrameLayout sliderShimmerFrameLayout, @NonNull SliderView sliderSliderView,
      @NonNull MaterialTextView sundayOpeningHoursTextView,
      @NonNull MaterialTextView thursdayOpeningHoursTextView,
      @NonNull ShimmerFrameLayout titleShimmerFrameLayout,
      @NonNull MaterialTextView tuesdayOpeningHoursTextView,
      @NonNull MaterialTextView wednesdayOpeningHoursTextView,
      @NonNull MaterialButton writeReviewButton) {
    this.rootView = rootView;
    this.artifactsShimmerFrameLayout = artifactsShimmerFrameLayout;
    this.buttonShimmerFrameLayout = buttonShimmerFrameLayout;
    this.chatbotFloatingActionButton = chatbotFloatingActionButton;
    this.childrenPriceTextView = childrenPriceTextView;
    this.descriptionShimmerFrameLayout = descriptionShimmerFrameLayout;
    this.descriptionTextView = descriptionTextView;
    this.detailActivityLayout = detailActivityLayout;
    this.egyptianAdultPriceTextView = egyptianAdultPriceTextView;
    this.egyptianPhotoPriceTextView = egyptianPhotoPriceTextView;
    this.egyptianStudentTextView = egyptianStudentTextView;
    this.egyptianVideoPriceTextView = egyptianVideoPriceTextView;
    this.foreignerAdultPriceTextView = foreignerAdultPriceTextView;
    this.foreignerPhotoPriceTextView = foreignerPhotoPriceTextView;
    this.foreignerStudentPriceTextView = foreignerStudentPriceTextView;
    this.foreignerVideoPriceTextView = foreignerVideoPriceTextView;
    this.fridayOpeningHoursTextView = fridayOpeningHoursTextView;
    this.hoursShimmerFrameLayout = hoursShimmerFrameLayout;
    this.itemsRecyclerView = itemsRecyclerView;
    this.locationLayout = locationLayout;
    this.locationShimmerFrameLayout = locationShimmerFrameLayout;
    this.locationTextView = locationTextView;
    this.mondayOpeningHoursTextView = mondayOpeningHoursTextView;
    this.noReviewsTextView = noReviewsTextView;
    this.placeTitleTextView = placeTitleTextView;
    this.pricesShimmerFrameLayout = pricesShimmerFrameLayout;
    this.reviewsRecyclerView = reviewsRecyclerView;
    this.reviewsShimmerFrameLayout = reviewsShimmerFrameLayout;
    this.saturdayOpeningHoursTextView = saturdayOpeningHoursTextView;
    this.shimmerScrollView = shimmerScrollView;
    this.sliderShimmerFrameLayout = sliderShimmerFrameLayout;
    this.sliderSliderView = sliderSliderView;
    this.sundayOpeningHoursTextView = sundayOpeningHoursTextView;
    this.thursdayOpeningHoursTextView = thursdayOpeningHoursTextView;
    this.titleShimmerFrameLayout = titleShimmerFrameLayout;
    this.tuesdayOpeningHoursTextView = tuesdayOpeningHoursTextView;
    this.wednesdayOpeningHoursTextView = wednesdayOpeningHoursTextView;
    this.writeReviewButton = writeReviewButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.artifactsShimmerFrameLayout;
      ShimmerFrameLayout artifactsShimmerFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (artifactsShimmerFrameLayout == null) {
        break missingId;
      }

      id = R.id.buttonShimmerFrameLayout;
      ShimmerFrameLayout buttonShimmerFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (buttonShimmerFrameLayout == null) {
        break missingId;
      }

      id = R.id.chatbotFloatingActionButton;
      FloatingActionButton chatbotFloatingActionButton = ViewBindings.findChildViewById(rootView, id);
      if (chatbotFloatingActionButton == null) {
        break missingId;
      }

      id = R.id.childrenPriceTextView;
      MaterialTextView childrenPriceTextView = ViewBindings.findChildViewById(rootView, id);
      if (childrenPriceTextView == null) {
        break missingId;
      }

      id = R.id.descriptionShimmerFrameLayout;
      ShimmerFrameLayout descriptionShimmerFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (descriptionShimmerFrameLayout == null) {
        break missingId;
      }

      id = R.id.descriptionTextView;
      MaterialTextView descriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTextView == null) {
        break missingId;
      }

      id = R.id.detailActivityLayout;
      LinearLayout detailActivityLayout = ViewBindings.findChildViewById(rootView, id);
      if (detailActivityLayout == null) {
        break missingId;
      }

      id = R.id.egyptianAdultPriceTextView;
      MaterialTextView egyptianAdultPriceTextView = ViewBindings.findChildViewById(rootView, id);
      if (egyptianAdultPriceTextView == null) {
        break missingId;
      }

      id = R.id.egyptianPhotoPriceTextView;
      MaterialTextView egyptianPhotoPriceTextView = ViewBindings.findChildViewById(rootView, id);
      if (egyptianPhotoPriceTextView == null) {
        break missingId;
      }

      id = R.id.egyptianStudentTextView;
      MaterialTextView egyptianStudentTextView = ViewBindings.findChildViewById(rootView, id);
      if (egyptianStudentTextView == null) {
        break missingId;
      }

      id = R.id.egyptianVideoPriceTextView;
      MaterialTextView egyptianVideoPriceTextView = ViewBindings.findChildViewById(rootView, id);
      if (egyptianVideoPriceTextView == null) {
        break missingId;
      }

      id = R.id.foreignerAdultPriceTextView;
      MaterialTextView foreignerAdultPriceTextView = ViewBindings.findChildViewById(rootView, id);
      if (foreignerAdultPriceTextView == null) {
        break missingId;
      }

      id = R.id.foreignerPhotoPriceTextView;
      MaterialTextView foreignerPhotoPriceTextView = ViewBindings.findChildViewById(rootView, id);
      if (foreignerPhotoPriceTextView == null) {
        break missingId;
      }

      id = R.id.foreignerStudentPriceTextView;
      MaterialTextView foreignerStudentPriceTextView = ViewBindings.findChildViewById(rootView, id);
      if (foreignerStudentPriceTextView == null) {
        break missingId;
      }

      id = R.id.foreignerVideoPriceTextView;
      MaterialTextView foreignerVideoPriceTextView = ViewBindings.findChildViewById(rootView, id);
      if (foreignerVideoPriceTextView == null) {
        break missingId;
      }

      id = R.id.fridayOpeningHoursTextView;
      MaterialTextView fridayOpeningHoursTextView = ViewBindings.findChildViewById(rootView, id);
      if (fridayOpeningHoursTextView == null) {
        break missingId;
      }

      id = R.id.hoursShimmerFrameLayout;
      ShimmerFrameLayout hoursShimmerFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (hoursShimmerFrameLayout == null) {
        break missingId;
      }

      id = R.id.itemsRecyclerView;
      RecyclerView itemsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (itemsRecyclerView == null) {
        break missingId;
      }

      id = R.id.locationLayout;
      LinearLayout locationLayout = ViewBindings.findChildViewById(rootView, id);
      if (locationLayout == null) {
        break missingId;
      }

      id = R.id.locationShimmerFrameLayout;
      ShimmerFrameLayout locationShimmerFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (locationShimmerFrameLayout == null) {
        break missingId;
      }

      id = R.id.locationTextView;
      MaterialTextView locationTextView = ViewBindings.findChildViewById(rootView, id);
      if (locationTextView == null) {
        break missingId;
      }

      id = R.id.mondayOpeningHoursTextView;
      MaterialTextView mondayOpeningHoursTextView = ViewBindings.findChildViewById(rootView, id);
      if (mondayOpeningHoursTextView == null) {
        break missingId;
      }

      id = R.id.noReviewsTextView;
      MaterialTextView noReviewsTextView = ViewBindings.findChildViewById(rootView, id);
      if (noReviewsTextView == null) {
        break missingId;
      }

      id = R.id.placeTitleTextView;
      MaterialTextView placeTitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (placeTitleTextView == null) {
        break missingId;
      }

      id = R.id.pricesShimmerFrameLayout;
      ShimmerFrameLayout pricesShimmerFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (pricesShimmerFrameLayout == null) {
        break missingId;
      }

      id = R.id.reviewsRecyclerView;
      RecyclerView reviewsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (reviewsRecyclerView == null) {
        break missingId;
      }

      id = R.id.reviewsShimmerFrameLayout;
      ShimmerFrameLayout reviewsShimmerFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (reviewsShimmerFrameLayout == null) {
        break missingId;
      }

      id = R.id.saturdayOpeningHoursTextView;
      MaterialTextView saturdayOpeningHoursTextView = ViewBindings.findChildViewById(rootView, id);
      if (saturdayOpeningHoursTextView == null) {
        break missingId;
      }

      id = R.id.shimmerScrollView;
      ScrollView shimmerScrollView = ViewBindings.findChildViewById(rootView, id);
      if (shimmerScrollView == null) {
        break missingId;
      }

      id = R.id.sliderShimmerFrameLayout;
      ShimmerFrameLayout sliderShimmerFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (sliderShimmerFrameLayout == null) {
        break missingId;
      }

      id = R.id.sliderSliderView;
      SliderView sliderSliderView = ViewBindings.findChildViewById(rootView, id);
      if (sliderSliderView == null) {
        break missingId;
      }

      id = R.id.sundayOpeningHoursTextView;
      MaterialTextView sundayOpeningHoursTextView = ViewBindings.findChildViewById(rootView, id);
      if (sundayOpeningHoursTextView == null) {
        break missingId;
      }

      id = R.id.thursdayOpeningHoursTextView;
      MaterialTextView thursdayOpeningHoursTextView = ViewBindings.findChildViewById(rootView, id);
      if (thursdayOpeningHoursTextView == null) {
        break missingId;
      }

      id = R.id.titleShimmerFrameLayout;
      ShimmerFrameLayout titleShimmerFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (titleShimmerFrameLayout == null) {
        break missingId;
      }

      id = R.id.tuesdayOpeningHoursTextView;
      MaterialTextView tuesdayOpeningHoursTextView = ViewBindings.findChildViewById(rootView, id);
      if (tuesdayOpeningHoursTextView == null) {
        break missingId;
      }

      id = R.id.wednesdayOpeningHoursTextView;
      MaterialTextView wednesdayOpeningHoursTextView = ViewBindings.findChildViewById(rootView, id);
      if (wednesdayOpeningHoursTextView == null) {
        break missingId;
      }

      id = R.id.writeReviewButton;
      MaterialButton writeReviewButton = ViewBindings.findChildViewById(rootView, id);
      if (writeReviewButton == null) {
        break missingId;
      }

      return new ActivityDetailBinding((ConstraintLayout) rootView, artifactsShimmerFrameLayout,
          buttonShimmerFrameLayout, chatbotFloatingActionButton, childrenPriceTextView,
          descriptionShimmerFrameLayout, descriptionTextView, detailActivityLayout,
          egyptianAdultPriceTextView, egyptianPhotoPriceTextView, egyptianStudentTextView,
          egyptianVideoPriceTextView, foreignerAdultPriceTextView, foreignerPhotoPriceTextView,
          foreignerStudentPriceTextView, foreignerVideoPriceTextView, fridayOpeningHoursTextView,
          hoursShimmerFrameLayout, itemsRecyclerView, locationLayout, locationShimmerFrameLayout,
          locationTextView, mondayOpeningHoursTextView, noReviewsTextView, placeTitleTextView,
          pricesShimmerFrameLayout, reviewsRecyclerView, reviewsShimmerFrameLayout,
          saturdayOpeningHoursTextView, shimmerScrollView, sliderShimmerFrameLayout,
          sliderSliderView, sundayOpeningHoursTextView, thursdayOpeningHoursTextView,
          titleShimmerFrameLayout, tuesdayOpeningHoursTextView, wednesdayOpeningHoursTextView,
          writeReviewButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
