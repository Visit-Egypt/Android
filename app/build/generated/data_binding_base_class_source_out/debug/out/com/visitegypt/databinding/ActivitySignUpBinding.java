// Generated by view binder compiler. Do not edit!
package com.visitegypt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.google.android.material.textview.MaterialTextView;
import com.visitegypt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignUpBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LoadingBinding loadingLayout;

  @NonNull
  public final ConstraintLayout myView;

  @NonNull
  public final MaterialTextView signInTransferButton;

  @NonNull
  public final AppCompatButton signUpButton;

  @NonNull
  public final MaterialTextView signUpTransferButton;

  @NonNull
  public final TextInputLayout txtEmail;

  @NonNull
  public final TextInputLayout txtFisrtName;

  @NonNull
  public final TextInputLayout txtLastName;

  @NonNull
  public final TextInputLayout txtPassword;

  @NonNull
  public final TextInputLayout txtPhoneNumber;

  @NonNull
  public final View view5;

  @NonNull
  public final View view7;

  private ActivitySignUpBinding(@NonNull ConstraintLayout rootView,
      @NonNull LoadingBinding loadingLayout, @NonNull ConstraintLayout myView,
      @NonNull MaterialTextView signInTransferButton, @NonNull AppCompatButton signUpButton,
      @NonNull MaterialTextView signUpTransferButton, @NonNull TextInputLayout txtEmail,
      @NonNull TextInputLayout txtFisrtName, @NonNull TextInputLayout txtLastName,
      @NonNull TextInputLayout txtPassword, @NonNull TextInputLayout txtPhoneNumber,
      @NonNull View view5, @NonNull View view7) {
    this.rootView = rootView;
    this.loadingLayout = loadingLayout;
    this.myView = myView;
    this.signInTransferButton = signInTransferButton;
    this.signUpButton = signUpButton;
    this.signUpTransferButton = signUpTransferButton;
    this.txtEmail = txtEmail;
    this.txtFisrtName = txtFisrtName;
    this.txtLastName = txtLastName;
    this.txtPassword = txtPassword;
    this.txtPhoneNumber = txtPhoneNumber;
    this.view5 = view5;
    this.view7 = view7;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.loadingLayout;
      View loadingLayout = ViewBindings.findChildViewById(rootView, id);
      if (loadingLayout == null) {
        break missingId;
      }
      LoadingBinding binding_loadingLayout = LoadingBinding.bind(loadingLayout);

      ConstraintLayout myView = (ConstraintLayout) rootView;

      id = R.id.signInTransferButton;
      MaterialTextView signInTransferButton = ViewBindings.findChildViewById(rootView, id);
      if (signInTransferButton == null) {
        break missingId;
      }

      id = R.id.signUpButton;
      AppCompatButton signUpButton = ViewBindings.findChildViewById(rootView, id);
      if (signUpButton == null) {
        break missingId;
      }

      id = R.id.signUpTransferButton;
      MaterialTextView signUpTransferButton = ViewBindings.findChildViewById(rootView, id);
      if (signUpTransferButton == null) {
        break missingId;
      }

      id = R.id.txtEmail;
      TextInputLayout txtEmail = ViewBindings.findChildViewById(rootView, id);
      if (txtEmail == null) {
        break missingId;
      }

      id = R.id.txtFisrtName;
      TextInputLayout txtFisrtName = ViewBindings.findChildViewById(rootView, id);
      if (txtFisrtName == null) {
        break missingId;
      }

      id = R.id.txtLastName;
      TextInputLayout txtLastName = ViewBindings.findChildViewById(rootView, id);
      if (txtLastName == null) {
        break missingId;
      }

      id = R.id.txtPassword;
      TextInputLayout txtPassword = ViewBindings.findChildViewById(rootView, id);
      if (txtPassword == null) {
        break missingId;
      }

      id = R.id.txtPhoneNumber;
      TextInputLayout txtPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (txtPhoneNumber == null) {
        break missingId;
      }

      id = R.id.view5;
      View view5 = ViewBindings.findChildViewById(rootView, id);
      if (view5 == null) {
        break missingId;
      }

      id = R.id.view7;
      View view7 = ViewBindings.findChildViewById(rootView, id);
      if (view7 == null) {
        break missingId;
      }

      return new ActivitySignUpBinding((ConstraintLayout) rootView, binding_loadingLayout, myView,
          signInTransferButton, signUpButton, signUpTransferButton, txtEmail, txtFisrtName,
          txtLastName, txtPassword, txtPhoneNumber, view5, view7);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
